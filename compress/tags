!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCELERATION_DEFAULT	./lz4.c	52;"	d	file:
ALLOCATOR	./lz4.c	134;"	d	file:
BUF_SIZE	./image-remote-pvt.h	11;"	d
BUF_SIZE	./no_compress/image-remote-pvt.h	11;"	d
BYTE	./lz4.c	/^  typedef  uint8_t BYTE;$/;"	t	file:
BYTE	./lz4.c	/^  typedef unsigned char       BYTE;$/;"	t	file:
CACHE_GET_PORT	./image-remote.h	25;"	d
CACHE_PUT_PORT	./image-remote.h	26;"	d
DEBUGLOG	./lz4.c	296;"	d	file:
DEBUGLOG	./lz4.c	303;"	d	file:
DEFAULT_HOST	./image-remote.h	11;"	d
DEFAULT_LISTEN	./image-remote-pvt.h	9;"	d
DEFAULT_LISTEN	./no_compress/image-remote-pvt.h	9;"	d
DUMP_FINISH	./image-remote.h	13;"	d
FORCE_INLINE	./lz4.c	106;"	d	file:
FORCE_INLINE	./lz4.c	110;"	d	file:
FORCE_INLINE	./lz4.c	112;"	d	file:
FORCE_INLINE	./lz4.c	115;"	d	file:
FREEMEM	./lz4.c	135;"	d	file:
GB	./lz4.c	278;"	d	file:
GET_PORT	./image-remote.h	19;"	d
HASH_UNIT	./lz4.c	954;"	d	file:
HLIST_HEAD	./list.h	299;"	d
HLIST_HEAD_INIT	./list.h	298;"	d
IMAGE_REMOTE_H	./image-remote.h	9;"	d
IMAGE_REMOTE_INTERNAL_H	./image-remote-pvt.h	2;"	d
IMAGE_REMOTE_INTERNAL_H	./no_compress/image-remote-pvt.h	2;"	d
INIT_HLIST_HEAD	./list.h	300;"	d
INIT_HLIST_NODE	./list.h	/^static inline void INIT_HLIST_NODE(struct hlist_node *h)$/;"	f
INIT_LIST_HEAD	./list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
KB	./lz4.c	276;"	d	file:
LASTLITERALS	./lz4.c	272;"	d	file:
LIST_HEAD	./list.h	19;"	d
LIST_HEAD_INIT	./list.h	18;"	d
LIST_POISON1	./list.h	11;"	d
LIST_POISON2	./list.h	12;"	d
LOCAL_DEVEL	./image-remote.h	17;"	d
LZ4LIB_API	./lz4.h	79;"	d
LZ4LIB_API	./lz4.h	81;"	d
LZ4LIB_API	./lz4.h	83;"	d
LZ4LIB_API	./lz4.h	85;"	d
LZ4_64Klimit	./lz4.c	/^static const int LZ4_64Klimit = ((64 KB) + (MFLIMIT-1));$/;"	v	file:
LZ4_COMPRESSBOUND	./lz4.h	153;"	d
LZ4_DEPRECATED	./lz4.h	419;"	d
LZ4_DEPRECATED	./lz4.h	423;"	d
LZ4_DEPRECATED	./lz4.h	425;"	d
LZ4_DEPRECATED	./lz4.h	427;"	d
LZ4_DEPRECATED	./lz4.h	429;"	d
LZ4_DEPRECATED	./lz4.h	432;"	d
LZ4_EXPAND_AND_QUOTE	./lz4.h	98;"	d
LZ4_FORCE_MEMORY_ACCESS	./lz4.c	73;"	d	file:
LZ4_FORCE_MEMORY_ACCESS	./lz4.c	75;"	d	file:
LZ4_FORCE_SW_BITCOUNT	./lz4.c	84;"	d	file:
LZ4_GCC_VERSION	./lz4.h	421;"	d
LZ4_HASHLOG	./lz4.h	333;"	d
LZ4_HASHTABLESIZE	./lz4.h	334;"	d
LZ4_HASH_SIZE_U32	./lz4.h	335;"	d
LZ4_HEAPMODE	./lz4.c	45;"	d	file:
LZ4_H_2983827168210	./lz4.h	40;"	d
LZ4_LIB_VERSION	./lz4.h	96;"	d
LZ4_MAX_INPUT_SIZE	./lz4.h	152;"	d
LZ4_MEMORY_USAGE	./lz4.h	116;"	d
LZ4_NbCommonBytes	./lz4.c	/^static unsigned LZ4_NbCommonBytes (register reg_t val)$/;"	f	file:
LZ4_QUOTE	./lz4.h	97;"	d
LZ4_STATIC_ASSERT	./lz4.c	292;"	d	file:
LZ4_STREAMDECODESIZE	./lz4.h	401;"	d
LZ4_STREAMDECODESIZE_U64	./lz4.h	400;"	d
LZ4_STREAMSIZE	./lz4.h	385;"	d
LZ4_STREAMSIZE_U64	./lz4.h	384;"	d
LZ4_VERSION_MAJOR	./lz4.h	90;"	d
LZ4_VERSION_MINOR	./lz4.h	91;"	d
LZ4_VERSION_NUMBER	./lz4.h	94;"	d
LZ4_VERSION_RELEASE	./lz4.h	92;"	d
LZ4_VERSION_STRING	./lz4.h	99;"	d
LZ4_compress	./lz4.c	/^int LZ4_compress(const char* source, char* dest, int inputSize) { return LZ4_compress_default(source, dest, inputSize, LZ4_compressBound(inputSize)); }$/;"	f
LZ4_compressBound	./lz4.c	/^int LZ4_compressBound(int isize)  { return LZ4_COMPRESSBOUND(isize); }$/;"	f
LZ4_compress_continue	./lz4.c	/^int LZ4_compress_continue (LZ4_stream_t* LZ4_stream, const char* source, char* dest, int inputSize) { return LZ4_compress_fast_continue(LZ4_stream, source, dest, inputSize, LZ4_compressBound(inputSize), 1); }$/;"	f
LZ4_compress_default	./lz4.c	/^int LZ4_compress_default(const char* source, char* dest, int inputSize, int maxOutputSize)$/;"	f
LZ4_compress_destSize	./lz4.c	/^int LZ4_compress_destSize(const char* src, char* dst, int* srcSizePtr, int targetDstSize)$/;"	f
LZ4_compress_destSize_extState	./lz4.c	/^static int LZ4_compress_destSize_extState (LZ4_stream_t* state, const char* src, char* dst, int* srcSizePtr, int targetDstSize)$/;"	f	file:
LZ4_compress_destSize_generic	./lz4.c	/^static int LZ4_compress_destSize_generic($/;"	f	file:
LZ4_compress_fast	./lz4.c	/^int LZ4_compress_fast(const char* source, char* dest, int inputSize, int maxOutputSize, int acceleration)$/;"	f
LZ4_compress_fast_continue	./lz4.c	/^int LZ4_compress_fast_continue (LZ4_stream_t* LZ4_stream, const char* source, char* dest, int inputSize, int maxOutputSize, int acceleration)$/;"	f
LZ4_compress_fast_extState	./lz4.c	/^int LZ4_compress_fast_extState(void* state, const char* source, char* dest, int inputSize, int maxOutputSize, int acceleration)$/;"	f
LZ4_compress_fast_force	./lz4.c	/^int LZ4_compress_fast_force(const char* source, char* dest, int inputSize, int maxOutputSize, int acceleration)$/;"	f
LZ4_compress_forceExtDict	./lz4.c	/^int LZ4_compress_forceExtDict (LZ4_stream_t* LZ4_dict, const char* source, char* dest, int inputSize)$/;"	f
LZ4_compress_generic	./lz4.c	/^FORCE_INLINE int LZ4_compress_generic($/;"	f
LZ4_compress_limitedOutput	./lz4.c	/^int LZ4_compress_limitedOutput(const char* source, char* dest, int inputSize, int maxOutputSize) { return LZ4_compress_default(source, dest, inputSize, maxOutputSize); }$/;"	f
LZ4_compress_limitedOutput_continue	./lz4.c	/^int LZ4_compress_limitedOutput_continue (LZ4_stream_t* LZ4_stream, const char* src, char* dst, int srcSize, int maxDstSize) { return LZ4_compress_fast_continue(LZ4_stream, src, dst, srcSize, maxDstSize, 1); }$/;"	f
LZ4_compress_limitedOutput_withState	./lz4.c	/^int LZ4_compress_limitedOutput_withState (void* state, const char* src, char* dst, int srcSize, int dstSize) { return LZ4_compress_fast_extState(state, src, dst, srcSize, dstSize, 1); }$/;"	f
LZ4_compress_withState	./lz4.c	/^int LZ4_compress_withState (void* state, const char* src, char* dst, int srcSize) { return LZ4_compress_fast_extState(state, src, dst, srcSize, LZ4_compressBound(srcSize), 1); }$/;"	f
LZ4_copy8	./lz4.c	/^static void LZ4_copy8(void* dst, const void* src)$/;"	f	file:
LZ4_count	./lz4.c	/^static unsigned LZ4_count(const BYTE* pIn, const BYTE* pMatch, const BYTE* pInLimit)$/;"	f	file:
LZ4_create	./lz4.c	/^void* LZ4_create (char* inputBuffer)$/;"	f
LZ4_createStream	./lz4.c	/^LZ4_stream_t* LZ4_createStream(void)$/;"	f
LZ4_createStreamDecode	./lz4.c	/^LZ4_streamDecode_t* LZ4_createStreamDecode(void)$/;"	f
LZ4_decompress_fast	./lz4.c	/^int LZ4_decompress_fast(const char* source, char* dest, int originalSize)$/;"	f
LZ4_decompress_fast_continue	./lz4.c	/^int LZ4_decompress_fast_continue (LZ4_streamDecode_t* LZ4_streamDecode, const char* source, char* dest, int originalSize)$/;"	f
LZ4_decompress_fast_usingDict	./lz4.c	/^int LZ4_decompress_fast_usingDict(const char* source, char* dest, int originalSize, const char* dictStart, int dictSize)$/;"	f
LZ4_decompress_fast_withPrefix64k	./lz4.c	/^int LZ4_decompress_fast_withPrefix64k(const char* source, char* dest, int originalSize)$/;"	f
LZ4_decompress_generic	./lz4.c	/^FORCE_INLINE int LZ4_decompress_generic($/;"	f
LZ4_decompress_safe	./lz4.c	/^int LZ4_decompress_safe(const char* source, char* dest, int compressedSize, int maxDecompressedSize)$/;"	f
LZ4_decompress_safe_continue	./lz4.c	/^int LZ4_decompress_safe_continue (LZ4_streamDecode_t* LZ4_streamDecode, const char* source, char* dest, int compressedSize, int maxOutputSize)$/;"	f
LZ4_decompress_safe_forceExtDict	./lz4.c	/^int LZ4_decompress_safe_forceExtDict(const char* source, char* dest, int compressedSize, int maxOutputSize, const char* dictStart, int dictSize)$/;"	f
LZ4_decompress_safe_partial	./lz4.c	/^int LZ4_decompress_safe_partial(const char* source, char* dest, int compressedSize, int targetOutputSize, int maxDecompressedSize)$/;"	f
LZ4_decompress_safe_usingDict	./lz4.c	/^int LZ4_decompress_safe_usingDict(const char* source, char* dest, int compressedSize, int maxOutputSize, const char* dictStart, int dictSize)$/;"	f
LZ4_decompress_safe_withPrefix64k	./lz4.c	/^int LZ4_decompress_safe_withPrefix64k(const char* source, char* dest, int compressedSize, int maxOutputSize)$/;"	f
LZ4_decompress_usingDict_generic	./lz4.c	/^FORCE_INLINE int LZ4_decompress_usingDict_generic(const char* source, char* dest, int compressedSize, int maxOutputSize, int safe, const char* dictStart, int dictSize)$/;"	f
LZ4_freeStream	./lz4.c	/^int LZ4_freeStream (LZ4_stream_t* LZ4_stream)$/;"	f
LZ4_freeStreamDecode	./lz4.c	/^int LZ4_freeStreamDecode (LZ4_streamDecode_t* LZ4_stream)$/;"	f
LZ4_getPosition	./lz4.c	/^FORCE_INLINE const BYTE* LZ4_getPosition(const BYTE* p, void* tableBase, tableType_t tableType, const BYTE* srcBase)$/;"	f
LZ4_getPositionOnHash	./lz4.c	/^static const BYTE* LZ4_getPositionOnHash(U32 h, void* tableBase, tableType_t tableType, const BYTE* srcBase)$/;"	f	file:
LZ4_hash4	./lz4.c	/^static U32 LZ4_hash4(U32 sequence, tableType_t const tableType)$/;"	f	file:
LZ4_hash5	./lz4.c	/^static U32 LZ4_hash5(U64 sequence, tableType_t const tableType)$/;"	f	file:
LZ4_hashPosition	./lz4.c	/^FORCE_INLINE U32 LZ4_hashPosition(const void* const p, tableType_t const tableType)$/;"	f
LZ4_init	./lz4.c	/^static void LZ4_init(LZ4_stream_t* lz4ds, BYTE* base)$/;"	f	file:
LZ4_isLittleEndian	./lz4.c	/^static unsigned LZ4_isLittleEndian(void)$/;"	f	file:
LZ4_loadDict	./lz4.c	/^int LZ4_loadDict (LZ4_stream_t* LZ4_dict, const char* dictionary, int dictSize)$/;"	f
LZ4_minLength	./lz4.c	/^static const int LZ4_minLength = (MFLIMIT+1);$/;"	v	file:
LZ4_putPosition	./lz4.c	/^FORCE_INLINE void LZ4_putPosition(const BYTE* p, void* tableBase, tableType_t tableType, const BYTE* srcBase)$/;"	f
LZ4_putPositionOnHash	./lz4.c	/^static void LZ4_putPositionOnHash(const BYTE* p, U32 h, void* tableBase, tableType_t const tableType, const BYTE* srcBase)$/;"	f	file:
LZ4_read16	./lz4.c	/^static U16 LZ4_read16(const void* memPtr) { return *(const U16*) memPtr; }$/;"	f	file:
LZ4_read16	./lz4.c	/^static U16 LZ4_read16(const void* memPtr)$/;"	f	file:
LZ4_read16	./lz4.c	/^static U16 LZ4_read16(const void* ptr) { return ((const unalign*)ptr)->u16; }$/;"	f	file:
LZ4_read32	./lz4.c	/^static U32 LZ4_read32(const void* memPtr) { return *(const U32*) memPtr; }$/;"	f	file:
LZ4_read32	./lz4.c	/^static U32 LZ4_read32(const void* memPtr)$/;"	f	file:
LZ4_read32	./lz4.c	/^static U32 LZ4_read32(const void* ptr) { return ((const unalign*)ptr)->u32; }$/;"	f	file:
LZ4_readLE16	./lz4.c	/^static U16 LZ4_readLE16(const void* memPtr)$/;"	f	file:
LZ4_read_ARCH	./lz4.c	/^static reg_t LZ4_read_ARCH(const void* memPtr) { return *(const reg_t*) memPtr; }$/;"	f	file:
LZ4_read_ARCH	./lz4.c	/^static reg_t LZ4_read_ARCH(const void* memPtr)$/;"	f	file:
LZ4_read_ARCH	./lz4.c	/^static reg_t LZ4_read_ARCH(const void* ptr) { return ((const unalign*)ptr)->uArch; }$/;"	f	file:
LZ4_renormDictT	./lz4.c	/^static void LZ4_renormDictT(LZ4_stream_t_internal* LZ4_dict, const BYTE* src)$/;"	f	file:
LZ4_resetStream	./lz4.c	/^void LZ4_resetStream (LZ4_stream_t* LZ4_stream)$/;"	f
LZ4_resetStreamState	./lz4.c	/^int LZ4_resetStreamState(void* state, char* inputBuffer)$/;"	f
LZ4_saveDict	./lz4.c	/^int LZ4_saveDict (LZ4_stream_t* LZ4_dict, char* safeBuffer, int dictSize)$/;"	f
LZ4_setStreamDecode	./lz4.c	/^int LZ4_setStreamDecode (LZ4_streamDecode_t* LZ4_streamDecode, const char* dictionary, int dictSize)$/;"	f
LZ4_sizeofState	./lz4.c	/^int LZ4_sizeofState() { return LZ4_STREAMSIZE; }$/;"	f
LZ4_sizeofStreamState	./lz4.c	/^int LZ4_sizeofStreamState() { return LZ4_STREAMSIZE; }$/;"	f
LZ4_skipTrigger	./lz4.c	/^static const U32 LZ4_skipTrigger = 6;  \/* Increase this value ==> compression run slower on incompressible data *\/$/;"	v	file:
LZ4_slideInputBuffer	./lz4.c	/^char* LZ4_slideInputBuffer (void* LZ4_Data)$/;"	f
LZ4_streamDecode_t	./lz4.h	/^typedef union LZ4_streamDecode_u LZ4_streamDecode_t;   \/* incomplete type (defined later) *\/$/;"	t	typeref:union:LZ4_streamDecode_u
LZ4_streamDecode_t_internal	./lz4.h	/^} LZ4_streamDecode_t_internal;$/;"	t	typeref:struct:__anon2
LZ4_streamDecode_t_internal	./lz4.h	/^} LZ4_streamDecode_t_internal;$/;"	t	typeref:struct:__anon4
LZ4_streamDecode_u	./lz4.h	/^union LZ4_streamDecode_u {$/;"	u
LZ4_stream_t	./lz4.h	/^typedef union LZ4_stream_u LZ4_stream_t;   \/* incomplete type (defined later) *\/$/;"	t	typeref:union:LZ4_stream_u
LZ4_stream_t_internal	./lz4.h	/^} LZ4_stream_t_internal;$/;"	t	typeref:struct:__anon1
LZ4_stream_t_internal	./lz4.h	/^} LZ4_stream_t_internal;$/;"	t	typeref:struct:__anon3
LZ4_stream_u	./lz4.h	/^union LZ4_stream_u {$/;"	u
LZ4_uncompress	./lz4.c	/^int LZ4_uncompress (const char* source, char* dest, int outputSize) { return LZ4_decompress_fast(source, dest, outputSize); }$/;"	f
LZ4_uncompress_unknownOutputSize	./lz4.c	/^int LZ4_uncompress_unknownOutputSize (const char* source, char* dest, int isize, int maxOutputSize) { return LZ4_decompress_safe(source, dest, isize, maxOutputSize); }$/;"	f
LZ4_versionNumber	./lz4.c	/^int LZ4_versionNumber (void) { return LZ4_VERSION_NUMBER; }$/;"	f
LZ4_versionString	./lz4.c	/^const char* LZ4_versionString(void) { return LZ4_VERSION_STRING; }$/;"	f
LZ4_wildCopy	./lz4.c	/^static void LZ4_wildCopy(void* dstPtr, const void* srcPtr, void* dstEnd)$/;"	f	file:
LZ4_write16	./lz4.c	/^static void LZ4_write16(void* memPtr, U16 value) { ((unalign*)memPtr)->u16 = value; }$/;"	f	file:
LZ4_write16	./lz4.c	/^static void LZ4_write16(void* memPtr, U16 value) { *(U16*)memPtr = value; }$/;"	f	file:
LZ4_write16	./lz4.c	/^static void LZ4_write16(void* memPtr, U16 value)$/;"	f	file:
LZ4_write32	./lz4.c	/^static void LZ4_write32(void* memPtr, U32 value) { ((unalign*)memPtr)->u32 = value; }$/;"	f	file:
LZ4_write32	./lz4.c	/^static void LZ4_write32(void* memPtr, U32 value) { *(U32*)memPtr = value; }$/;"	f	file:
LZ4_write32	./lz4.c	/^static void LZ4_write32(void* memPtr, U32 value)$/;"	f	file:
LZ4_writeLE16	./lz4.c	/^static void LZ4_writeLE16(void* memPtr, U16 value)$/;"	f	file:
MAXD_LOG	./lz4.c	280;"	d	file:
MAX_DISTANCE	./lz4.c	281;"	d	file:
MB	./lz4.c	277;"	d	file:
MEM_INIT	./lz4.c	137;"	d	file:
MFLIMIT	./lz4.c	273;"	d	file:
MIN	./image-remote.h	32;"	d
MINMATCH	./lz4.c	269;"	d	file:
ML_BITS	./lz4.c	283;"	d	file:
ML_MASK	./lz4.c	284;"	d	file:
NULL_NAMESPACE	./image-remote.h	15;"	d
PAGESIZE	./image-remote-pvt.h	10;"	d
PAGESIZE	./no_compress/image-remote-pvt.h	10;"	d
PARENT_IMG	./image-remote.h	14;"	d
PATHLEN	./image-remote.h	12;"	d
POISON_POINTER_DELTA	./list.h	10;"	d
PROXY_FWD_HOST	./image-remote.h	29;"	d
PROXY_FWD_PORT	./image-remote.h	28;"	d
PROXY_GET_PORT	./image-remote.h	22;"	d
PROXY_PUT_PORT	./image-remote.h	23;"	d
PUT_PORT	./image-remote.h	20;"	d
RUN_BITS	./lz4.c	285;"	d	file:
RUN_MASK	./lz4.c	286;"	d	file:
S32	./lz4.c	/^  typedef   signed int        S32;$/;"	t	file:
S32	./lz4.c	/^  typedef  int32_t S32;$/;"	t	file:
STEPSIZE	./lz4.c	368;"	d	file:
U16	./lz4.c	/^  typedef uint16_t U16;$/;"	t	file:
U16	./lz4.c	/^  typedef unsigned short      U16;$/;"	t	file:
U32	./lz4.c	/^  typedef uint32_t U32;$/;"	t	file:
U32	./lz4.c	/^  typedef unsigned int        U32;$/;"	t	file:
U64	./lz4.c	/^  typedef uint64_t U64;$/;"	t	file:
U64	./lz4.c	/^  typedef unsigned long long  U64;$/;"	t	file:
WILDCOPYLENGTH	./lz4.c	271;"	d	file:
__CR_LIST_H__	./list.h	2;"	d
__hlist_del	./list.h	/^static inline void __hlist_del(struct hlist_node *n)$/;"	f
__list_add	./list.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_cut_position	./list.h	/^static inline void __list_cut_position(struct list_head *list,$/;"	f
__list_del	./list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__list_del_entry	./list.h	/^static inline void __list_del_entry(struct list_head *entry)$/;"	f
__list_for_each	./list.h	218;"	d
__list_splice	./list.h	/^static inline void __list_splice(const struct list_head *list,$/;"	f
accept_get_image_connections	./image-remote-pvt.c	/^void* accept_get_image_connections(void* port)$/;"	f
accept_get_image_connections	./no_compress/image-remote-pvt.c	/^void* accept_get_image_connections(void* port)$/;"	f
accept_put_image_connections	./image-remote-pvt.c	/^void* accept_put_image_connections(void* port)$/;"	f
accept_put_image_connections	./no_compress/image-remote-pvt.c	/^void* accept_put_image_connections(void* port)$/;"	f
add_worker	./image-remote-pvt.c	/^static void add_worker(pthread_t tid)$/;"	f	file:
add_worker	./no_compress/image-remote-pvt.c	/^static void add_worker(pthread_t tid)$/;"	f	file:
buf_head	./image-remote-pvt.h	/^    struct list_head buf_head;$/;"	m	struct:rimg	typeref:struct:rimg::list_head
buf_head	./no_compress/image-remote-pvt.h	/^    struct list_head buf_head;$/;"	m	struct:rimg	typeref:struct:rimg::list_head
buffer	./image-remote-pvt.h	/^    char buffer[BUF_SIZE];$/;"	m	struct:rbuf
buffer	./no_compress/image-remote-pvt.h	/^    char buffer[BUF_SIZE];$/;"	m	struct:rbuf
bufferStart	./lz4.h	/^    uint8_t* bufferStart;   \/* obsolete, used for slideInputBuffer *\/$/;"	m	struct:__anon1
bufferStart	./lz4.h	/^    unsigned char* bufferStart;   \/* obsolete, used for slideInputBuffer *\/$/;"	m	struct:__anon3
byPtr	./lz4.c	/^typedef enum { byPtr, byU32, byU16 } tableType_t;$/;"	e	enum:__anon7	file:
byU16	./lz4.c	/^typedef enum { byPtr, byU32, byU16 } tableType_t;$/;"	e	enum:__anon7	file:
byU32	./lz4.c	/^typedef enum { byPtr, byU32, byU16 } tableType_t;$/;"	e	enum:__anon7	file:
cbytes	./image-remote-pvt.h	/^	int cbytes;$/;"	m	struct:msgInfo
cbytes	./no_compress/image-remote-pvt.h	/^	int cbytes;$/;"	m	struct:msgInfo
container_of	./list.h	396;"	d
currentOffset	./lz4.h	/^    uint32_t currentOffset;$/;"	m	struct:__anon1
currentOffset	./lz4.h	/^    unsigned int currentOffset;$/;"	m	struct:__anon3
dictIssue_directive	./lz4.c	/^typedef enum { noDictIssue = 0, dictSmall } dictIssue_directive;$/;"	t	typeref:enum:__anon9	file:
dictSize	./lz4.h	/^    uint32_t dictSize;$/;"	m	struct:__anon1
dictSize	./lz4.h	/^    unsigned int dictSize;$/;"	m	struct:__anon3
dictSmall	./lz4.c	/^typedef enum { noDictIssue = 0, dictSmall } dictIssue_directive;$/;"	e	enum:__anon9	file:
dict_directive	./lz4.c	/^typedef enum { noDict = 0, withPrefix64k, usingExtDict } dict_directive;$/;"	t	typeref:enum:__anon8	file:
dictionary	./lz4.h	/^    const uint8_t* dictionary;$/;"	m	struct:__anon1
dictionary	./lz4.h	/^    const unsigned char* dictionary;$/;"	m	struct:__anon3
dst_fd	./image-remote-pvt.h	/^    int dst_fd;$/;"	m	struct:rimg
dst_fd	./no_compress/image-remote-pvt.h	/^    int dst_fd;$/;"	m	struct:rimg
dst_host	./image-proxy.c	/^static char* dst_host;$/;"	v	file:
dst_port	./image-proxy.c	/^static unsigned short dst_port = CACHE_PUT_PORT;$/;"	v	file:
earlyEnd_directive	./lz4.c	/^typedef enum { full = 0, partial = 1 } earlyEnd_directive;$/;"	t	typeref:enum:__anon11	file:
endCondition_directive	./lz4.c	/^typedef enum { endOnOutputSize = 0, endOnInputSize = 1 } endCondition_directive;$/;"	t	typeref:enum:__anon10	file:
endOnInputSize	./lz4.c	/^typedef enum { endOnOutputSize = 0, endOnInputSize = 1 } endCondition_directive;$/;"	e	enum:__anon10	file:
endOnOutputSize	./lz4.c	/^typedef enum { endOnOutputSize = 0, endOnInputSize = 1 } endCondition_directive;$/;"	e	enum:__anon10	file:
expect	./lz4.c	121;"	d	file:
expect	./lz4.c	123;"	d	file:
extDictSize	./lz4.h	/^    size_t extDictSize;$/;"	m	struct:__anon2
extDictSize	./lz4.h	/^    size_t extDictSize;$/;"	m	struct:__anon4
externalDict	./lz4.h	/^    const uint8_t* externalDict;$/;"	m	struct:__anon2
externalDict	./lz4.h	/^    const unsigned char* externalDict;$/;"	m	struct:__anon4
fetch_namespaces	./image-remote.c	/^static int fetch_namespaces() {$/;"	f	file:
finalize_put_rimg	./image-remote-pvt.c	/^void finalize_put_rimg(remote_image* rimg)$/;"	f
finalize_put_rimg	./no_compress/image-remote-pvt.c	/^void finalize_put_rimg(remote_image* rimg)$/;"	f
finish_remote_dump	./image-remote.c	/^int finish_remote_dump()$/;"	f
finished	./image-remote-pvt.c	/^static int finished = 0;$/;"	v	file:
finished	./no_compress/image-remote-pvt.c	/^static int finished = 0;$/;"	v	file:
first	./list.h	/^	struct hlist_node *first;$/;"	m	struct:hlist_head	typeref:struct:hlist_head::hlist_node
full	./lz4.c	/^typedef enum { full = 0, partial = 1 } earlyEnd_directive;$/;"	e	enum:__anon11	file:
get_current_namespace	./image-remote.c	/^char* get_current_namespace()$/;"	f
get_current_namespace_fd	./image-remote.c	/^int get_current_namespace_fd()$/;"	f
get_func	./image-remote-pvt.c	/^static void* (*get_func)(void*);$/;"	v	file:
get_func	./no_compress/image-remote-pvt.c	/^static void* (*get_func)(void*);$/;"	v	file:
get_namespace	./image-remote.c	/^char* get_namespace(int dfd)$/;"	f
get_remote_image	./image-remote-pvt.c	/^void* get_remote_image(void* fd)$/;"	f
get_remote_image	./no_compress/image-remote-pvt.c	/^void* get_remote_image(void* fd)$/;"	f
get_remote_image_connection	./image-remote.c	/^int get_remote_image_connection(char* namespace, char* path)$/;"	f
get_rimg_by_name	./image-remote-pvt.c	/^static remote_image* get_rimg_by_name(const char* namespace, const char* path)$/;"	f	file:
get_rimg_by_name	./no_compress/image-remote-pvt.c	/^static remote_image* get_rimg_by_name(const char* namespace, const char* path)$/;"	f	file:
hashTable	./lz4.h	/^    uint32_t hashTable[LZ4_HASH_SIZE_U32];$/;"	m	struct:__anon1
hashTable	./lz4.h	/^    unsigned int hashTable[LZ4_HASH_SIZE_U32];$/;"	m	struct:__anon3
hlist_add_after	./list.h	/^static inline void hlist_add_after(struct hlist_node *n,$/;"	f
hlist_add_before	./list.h	/^static inline void hlist_add_before(struct hlist_node *n,$/;"	f
hlist_add_fake	./list.h	/^static inline void hlist_add_fake(struct hlist_node *n)$/;"	f
hlist_add_head	./list.h	/^static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h)$/;"	f
hlist_del	./list.h	/^static inline void hlist_del(struct hlist_node *n)$/;"	f
hlist_del_init	./list.h	/^static inline void hlist_del_init(struct hlist_node *n)$/;"	f
hlist_empty	./list.h	/^static inline int hlist_empty(const struct hlist_head *h)$/;"	f
hlist_entry	./list.h	400;"	d
hlist_entry_safe	./list.h	409;"	d
hlist_for_each	./list.h	402;"	d
hlist_for_each_entry	./list.h	412;"	d
hlist_for_each_entry_continue	./list.h	417;"	d
hlist_for_each_entry_from	./list.h	422;"	d
hlist_for_each_entry_safe	./list.h	426;"	d
hlist_for_each_safe	./list.h	405;"	d
hlist_head	./list.h	/^struct hlist_head {$/;"	s
hlist_move_list	./list.h	/^static inline void hlist_move_list(struct hlist_head *old,$/;"	f
hlist_node	./list.h	/^struct hlist_node {$/;"	s
hlist_unhashed	./list.h	/^static inline int hlist_unhashed(const struct hlist_node *h)$/;"	f
image_proxy	./image-proxy.c	/^int image_proxy(char* fwd_host, unsigned short fwd_port)$/;"	f
initCheck	./lz4.h	/^    uint32_t initCheck;$/;"	m	struct:__anon1
initCheck	./lz4.h	/^    unsigned int initCheck;$/;"	m	struct:__anon3
init_namespace	./image-remote.c	/^void init_namespace(char* ns, char* p)$/;"	f
init_proxy	./image-remote-pvt.c	/^int init_proxy()$/;"	f
init_proxy	./no_compress/image-remote-pvt.c	/^int init_proxy()$/;"	f
init_sync_structures	./image-remote-pvt.c	/^int init_sync_structures()$/;"	f
init_sync_structures	./no_compress/image-remote-pvt.c	/^int init_sync_structures()$/;"	f
internal_donotuse	./lz4.h	/^    LZ4_streamDecode_t_internal internal_donotuse;$/;"	m	union:LZ4_streamDecode_u
internal_donotuse	./lz4.h	/^    LZ4_stream_t_internal internal_donotuse;$/;"	m	union:LZ4_stream_u
is_compressed	./image-remote-pvt.h	/^	bool is_compressed;$/;"	m	struct:msgInfo
is_compressed	./no_compress/image-remote-pvt.h	/^	bool is_compressed;$/;"	m	struct:msgInfo
is_end	./image-remote-pvt.h	/^	bool is_end;$/;"	m	struct:msgInfo
is_end	./image-remote-pvt.h	/^	int is_end;$/;"	m	struct:rbuf
is_end	./no_compress/image-remote-pvt.h	/^	bool is_end;$/;"	m	struct:msgInfo
is_end	./no_compress/image-remote-pvt.h	/^	int is_end;$/;"	m	struct:rbuf
join_workers	./image-remote-pvt.c	/^void join_workers()$/;"	f
join_workers	./no_compress/image-remote-pvt.c	/^void join_workers()$/;"	f
l	./image-remote-pvt.c	/^    struct list_head l;$/;"	m	struct:wthread	typeref:struct:wthread::list_head	file:
l	./image-remote-pvt.h	/^    struct list_head l;$/;"	m	struct:rbuf	typeref:struct:rbuf::list_head
l	./image-remote-pvt.h	/^    struct list_head l;$/;"	m	struct:rimg	typeref:struct:rimg::list_head
l	./no_compress/image-remote-pvt.c	/^    struct list_head l;$/;"	m	struct:wthread	typeref:struct:wthread::list_head	file:
l	./no_compress/image-remote-pvt.h	/^    struct list_head l;$/;"	m	struct:rbuf	typeref:struct:rbuf::list_head
l	./no_compress/image-remote-pvt.h	/^    struct list_head l;$/;"	m	struct:rimg	typeref:struct:rimg::list_head
likely	./lz4.c	126;"	d	file:
limitedOutput	./lz4.c	/^typedef enum { notLimited = 0, limitedOutput = 1 } limitedOutput_directive;$/;"	e	enum:__anon6	file:
limitedOutput_directive	./lz4.c	/^typedef enum { notLimited = 0, limitedOutput = 1 } limitedOutput_directive;$/;"	t	typeref:enum:__anon6	file:
list_add	./list.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail	./list.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f
list_cut_position	./list.h	/^static inline void list_cut_position(struct list_head *list,$/;"	f
list_del	./list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_del_init	./list.h	/^static inline void list_del_init(struct list_head *entry)$/;"	f
list_empty	./list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_empty_careful	./list.h	/^static inline int list_empty_careful(const struct list_head *head)$/;"	f
list_entry	./list.h	209;"	d
list_first_entry	./list.h	212;"	d
list_for_each	./list.h	215;"	d
list_for_each_entry	./list.h	233;"	d
list_for_each_entry_continue	./list.h	246;"	d
list_for_each_entry_continue_reverse	./list.h	251;"	d
list_for_each_entry_from	./list.h	256;"	d
list_for_each_entry_reverse	./list.h	238;"	d
list_for_each_entry_safe	./list.h	260;"	d
list_for_each_entry_safe_continue	./list.h	266;"	d
list_for_each_entry_safe_from	./list.h	272;"	d
list_for_each_entry_safe_reverse	./list.h	277;"	d
list_for_each_prev	./list.h	221;"	d
list_for_each_prev_safe	./list.h	228;"	d
list_for_each_safe	./list.h	224;"	d
list_head	./list.h	/^struct list_head {$/;"	s
list_is_first	./list.h	/^static inline int list_is_first(const struct list_head *list,$/;"	f
list_is_last	./list.h	/^static inline int list_is_last(const struct list_head *list,$/;"	f
list_is_singular	./list.h	/^static inline int list_is_singular(const struct list_head *head)$/;"	f
list_move	./list.h	/^static inline void list_move(struct list_head *list, struct list_head *head)$/;"	f
list_move_tail	./list.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
list_prepare_entry	./list.h	243;"	d
list_replace	./list.h	/^static inline void list_replace(struct list_head *old,$/;"	f
list_replace_init	./list.h	/^static inline void list_replace_init(struct list_head *old,$/;"	f
list_rotate_left	./list.h	/^static inline void list_rotate_left(struct list_head *head)$/;"	f
list_safe_reset_next	./list.h	283;"	d
list_splice	./list.h	/^static inline void list_splice(const struct list_head *list,$/;"	f
list_splice_init	./list.h	/^static inline void list_splice_init(struct list_head *list,$/;"	f
list_splice_tail	./list.h	/^static inline void list_splice_tail(struct list_head *list,$/;"	f
list_splice_tail_init	./list.h	/^static inline void list_splice_tail_init(struct list_head *list,$/;"	f
main	./main.c	/^int main(int argc, char *argv[])$/;"	f
msgInfo	./image-remote-pvt.h	/^typedef struct msgInfo {$/;"	s
msgInfo	./image-remote-pvt.h	/^} msgInfo;$/;"	t	typeref:struct:msgInfo
msgInfo	./no_compress/image-remote-pvt.h	/^typedef struct msgInfo {$/;"	s
msgInfo	./no_compress/image-remote-pvt.h	/^} msgInfo;$/;"	t	typeref:struct:msgInfo
namespace	./image-remote.c	/^static char* namespace = NULL;$/;"	v	file:
nbytes	./image-remote-pvt.h	/^	int nbytes;$/;"	m	struct:msgInfo
nbytes	./image-remote-pvt.h	/^    int nbytes; \/\/ How many bytes are in the buffer.$/;"	m	struct:rbuf
nbytes	./no_compress/image-remote-pvt.h	/^	int nbytes;$/;"	m	struct:msgInfo
nbytes	./no_compress/image-remote-pvt.h	/^    int nbytes; \/\/ How many bytes are in the buffer.$/;"	m	struct:rbuf
next	./list.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
next	./list.h	/^	struct list_head *prev, *next;$/;"	m	struct:list_head	typeref:struct:list_head::
noDict	./lz4.c	/^typedef enum { noDict = 0, withPrefix64k, usingExtDict } dict_directive;$/;"	e	enum:__anon8	file:
noDictIssue	./lz4.c	/^typedef enum { noDictIssue = 0, dictSmall } dictIssue_directive;$/;"	e	enum:__anon9	file:
notLimited	./lz4.c	/^typedef enum { notLimited = 0, limitedOutput = 1 } limitedOutput_directive;$/;"	e	enum:__anon6	file:
offsetof	./list.h	393;"	d
open_remote_image_connection	./image-remote.c	/^int open_remote_image_connection(char* namespace, char* path)$/;"	f
parent	./image-remote.c	/^static char* parent = NULL;$/;"	v	file:
parents	./image-remote.c	/^static char parents[PATHLEN][PATHLEN];$/;"	v	file:
parents_occ	./image-remote.c	/^static int  parents_occ = 0;$/;"	v	file:
partial	./lz4.c	/^typedef enum { full = 0, partial = 1 } earlyEnd_directive;$/;"	e	enum:__anon11	file:
path	./image-remote-pvt.h	/^    char path[PATHLEN];$/;"	m	struct:rimg
path	./no_compress/image-remote-pvt.h	/^    char path[PATHLEN];$/;"	m	struct:rimg
pprev	./list.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::
prefixEnd	./lz4.h	/^    const uint8_t* prefixEnd;$/;"	m	struct:__anon2
prefixEnd	./lz4.h	/^    const unsigned char* prefixEnd;$/;"	m	struct:__anon4
prefixSize	./lz4.h	/^    size_t prefixSize;$/;"	m	struct:__anon2
prefixSize	./lz4.h	/^    size_t prefixSize;$/;"	m	struct:__anon4
prepare_client_socket	./image-remote-pvt.c	/^int prepare_client_socket(char* hostname, int port)$/;"	f
prepare_client_socket	./no_compress/image-remote-pvt.c	/^int prepare_client_socket(char* hostname, int port)$/;"	f
prepare_put_rimg	./image-remote-pvt.c	/^void prepare_put_rimg()$/;"	f
prepare_put_rimg	./no_compress/image-remote-pvt.c	/^void prepare_put_rimg()$/;"	f
prepare_server_socket	./image-remote-pvt.c	/^int prepare_server_socket(int port)$/;"	f
prepare_server_socket	./no_compress/image-remote-pvt.c	/^int prepare_server_socket(int port)$/;"	f
prev	./list.h	/^	struct list_head *prev, *next;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
proxy_remote_image	./image-proxy.c	/^void* proxy_remote_image(void* ptr)$/;"	f
push_namespace	./image-remote.c	/^int push_namespace()$/;"	f
push_namespaces	./image-remote.c	/^static int push_namespaces()$/;"	f	file:
put_func	./image-remote-pvt.c	/^static void* (*put_func)(void*);$/;"	v	file:
put_func	./no_compress/image-remote-pvt.c	/^static void* (*put_func)(void*);$/;"	v	file:
putting	./image-remote-pvt.c	/^static int putting = 0;$/;"	v	file:
putting	./no_compress/image-remote-pvt.c	/^static int putting = 0;$/;"	v	file:
rbuf	./image-remote-pvt.h	/^typedef struct rbuf {$/;"	s
rbuf	./no_compress/image-remote-pvt.h	/^typedef struct rbuf {$/;"	s
read_header	./image-remote.c	/^int read_header(int fd, char* namespace, char* path)$/;"	f
recv_remote_image	./image-remote-pvt.c	/^int recv_remote_image(int fd, char* path, struct list_head* rbuff_head)$/;"	f
recv_remote_image	./no_compress/image-remote-pvt.c	/^int recv_remote_image(int fd, char* path, struct list_head* rbuff_head)$/;"	f
reg_t	./lz4.c	/^  typedef U64    reg_t;   \/* 64-bits in x32 mode *\/$/;"	t	file:
reg_t	./lz4.c	/^  typedef size_t reg_t;   \/* 32-bits in x32 mode *\/$/;"	t	file:
remote_buffer	./image-remote-pvt.h	/^} remote_buffer;$/;"	t	typeref:struct:rbuf
remote_buffer	./no_compress/image-remote-pvt.h	/^} remote_buffer;$/;"	t	typeref:struct:rbuf
remote_image	./image-remote-pvt.h	/^} remote_image;$/;"	t	typeref:struct:rimg
remote_image	./no_compress/image-remote-pvt.h	/^} remote_image;$/;"	t	typeref:struct:rimg
rimg	./image-remote-pvt.h	/^typedef struct rimg {$/;"	s
rimg	./no_compress/image-remote-pvt.h	/^typedef struct rimg {$/;"	s
rimg_lock	./image-remote-pvt.c	/^static pthread_mutex_t rimg_lock;$/;"	v	file:
rimg_lock	./no_compress/image-remote-pvt.c	/^static pthread_mutex_t rimg_lock;$/;"	v	file:
rimg_semph	./image-remote-pvt.c	/^static sem_t rimg_semph;$/;"	v	file:
rimg_semph	./no_compress/image-remote-pvt.c	/^static sem_t rimg_semph;$/;"	v	file:
send_remote_image	./image-remote-pvt.c	/^int send_remote_image(int fd, char* path, struct list_head* rbuff_head)$/;"	f
send_remote_image	./no_compress/image-remote-pvt.c	/^int send_remote_image(int fd, char* path, struct list_head* rbuff_head)$/;"	f
send_remote_image_lz4	./image-remote-pvt.c	/^int send_remote_image_lz4(int fd, char* path, struct list_head* rbuff_head)$/;"	f
send_remote_obj	./image-remote-pvt.c	/^size_t send_remote_obj(int fd, char* buff, size_t size) $/;"	f
send_remote_obj	./no_compress/image-remote-pvt.c	/^size_t send_remote_obj(int fd, char* buff, size_t size) $/;"	f
setup_local_client_connection	./image-remote.c	/^int setup_local_client_connection(int port)$/;"	f
skip_remote_bytes	./image-remote.c	/^int skip_remote_bytes(int fd, unsigned long len)$/;"	f
src_fd	./image-remote-pvt.h	/^    int src_fd;$/;"	m	struct:rimg
src_fd	./no_compress/image-remote-pvt.h	/^    int src_fd;$/;"	m	struct:rimg
table	./lz4.h	/^    unsigned long long table[LZ4_STREAMDECODESIZE_U64];$/;"	m	union:LZ4_streamDecode_u
table	./lz4.h	/^    unsigned long long table[LZ4_STREAMSIZE_U64];$/;"	m	union:LZ4_stream_u
tableType_t	./lz4.c	/^typedef enum { byPtr, byU32, byU16 } tableType_t;$/;"	t	typeref:enum:__anon7	file:
tid	./image-remote-pvt.c	/^    pthread_t tid;$/;"	m	struct:wthread	file:
tid	./no_compress/image-remote-pvt.c	/^    pthread_t tid;$/;"	m	struct:wthread	file:
u16	./lz4.c	/^typedef union { U16 u16; U32 u32; reg_t uArch; } __attribute__((packed)) unalign;$/;"	m	union:__anon5	file:
u32	./lz4.c	/^typedef union { U16 u16; U32 u32; reg_t uArch; } __attribute__((packed)) unalign;$/;"	m	union:__anon5	file:
uArch	./lz4.c	/^typedef union { U16 u16; U32 u32; reg_t uArch; } __attribute__((packed)) unalign;$/;"	m	union:__anon5	file:
unalign	./lz4.c	/^typedef union { U16 u16; U32 u32; reg_t uArch; } __attribute__((packed)) unalign;$/;"	t	typeref:union:__anon5	file:
unlikely	./lz4.c	127;"	d	file:
uptrval	./lz4.c	/^  typedef size_t              uptrval;   \/* generally true, except OpenVMS-64 *\/$/;"	t	file:
uptrval	./lz4.c	/^  typedef uintptr_t uptrval;$/;"	t	file:
usingExtDict	./lz4.c	/^typedef enum { noDict = 0, withPrefix64k, usingExtDict } dict_directive;$/;"	e	enum:__anon8	file:
wait_for_image	./image-remote-pvt.c	/^remote_image* wait_for_image(int cli_fd, char* namespace, char* path)$/;"	f
wait_for_image	./no_compress/image-remote-pvt.c	/^remote_image* wait_for_image(int cli_fd, char* namespace, char* path)$/;"	f
withPrefix64k	./lz4.c	/^typedef enum { noDict = 0, withPrefix64k, usingExtDict } dict_directive;$/;"	e	enum:__anon8	file:
worker_thread	./image-remote-pvt.c	/^} worker_thread;$/;"	t	typeref:struct:wthread	file:
worker_thread	./no_compress/image-remote-pvt.c	/^} worker_thread;$/;"	t	typeref:struct:wthread	file:
workers_lock	./image-remote-pvt.c	/^static pthread_mutex_t workers_lock;$/;"	v	file:
workers_lock	./no_compress/image-remote-pvt.c	/^static pthread_mutex_t workers_lock;$/;"	v	file:
workers_semph	./image-remote-pvt.c	/^static sem_t workers_semph;$/;"	v	file:
workers_semph	./no_compress/image-remote-pvt.c	/^static sem_t workers_semph;$/;"	v	file:
write_header	./image-remote.c	/^int write_header(int fd, char* namespace, char* path)$/;"	f
wthread	./image-remote-pvt.c	/^typedef struct wthread {$/;"	s	file:
wthread	./no_compress/image-remote-pvt.c	/^typedef struct wthread {$/;"	s	file:
